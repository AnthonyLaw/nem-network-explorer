{"version":3,"sources":["../../src/transactions/SecretProofTransaction.js"],"names":["SecretProofTransactionBufferPackage","require","flatbuffers","SecretProofTransactionBuffer","default","Buffers","SecretProofTransaction","Builder","fee","version","type","deadline","hashAlgorithm","secret","proof","builder","signatureVector","createSignatureVector","Array","map","Number","prototype","valueOf","signerVector","createSignerVector","deadlineVector","createDeadlineVector","feeVector","createFeeVector","byteSecret","convert","hexToUint8","secretVector","createSecretVector","byteProof","proofVector","createProofVector","startSecretProofTransactionBuffer","addSize","length","addSignature","addSigner","addVersion","addType","addFee","addDeadline","addHashAlgorithm","addSecret","addProofSize","addProof","codedSecretProof","endSecretProofTransactionBuffer","finish","bytes","asUint8Array","SecretProofTransactionSchema","VerifiableTransaction"],"mappings":"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","file":"SecretProofTransaction.js","sourcesContent":["/*\n * Copyright 2018 NEM\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @module transactions/SecretProofTransaction\n */\nimport VerifiableTransaction from './VerifiableTransaction';\nimport * as SecretProofTransactionBufferPackage from '../buffers/SecretProofTransactionBuffer';\nimport SecretProofTransactionSchema from '../schema/SecretProofTransactionSchema';\nimport convert from '../coders/convert';\n\nconst { flatbuffers } = require('flatbuffers');\n\nconst { SecretProofTransactionBuffer } = SecretProofTransactionBufferPackage.default.Buffers;\n\nexport default class SecretProofTransaction extends VerifiableTransaction {\n\tstatic get Builder() {\n\t\tclass Builder {\n\t\t\tconstructor() {\n\t\t\t\tthis.fee = [0, 0];\n\t\t\t\tthis.version = 36865;\n\t\t\t\tthis.type = 0x434C;\n\t\t\t}\n\n\t\t\taddFee(fee) {\n\t\t\t\tthis.fee = fee;\n\t\t\t\treturn this;\n\t\t\t}\n\n\t\t\taddVersion(version) {\n\t\t\t\tthis.version = version;\n\t\t\t\treturn this;\n\t\t\t}\n\n\t\t\taddType(type) {\n\t\t\t\tthis.type = type;\n\t\t\t\treturn this;\n\t\t\t}\n\n\t\t\taddDeadline(deadline) {\n\t\t\t\tthis.deadline = deadline;\n\t\t\t\treturn this;\n\t\t\t}\n\n\t\t\taddHashAlgorithm(hashAlgorithm) {\n\t\t\t\tthis.hashAlgorithm = hashAlgorithm;\n\t\t\t\treturn this;\n\t\t\t}\n\n\t\t\taddSecret(secret) {\n\t\t\t\tthis.secret = secret;\n\t\t\t\treturn this;\n\t\t\t}\n\n\t\t\taddProof(proof) {\n\t\t\t\tthis.proof = proof;\n\t\t\t\treturn this;\n\t\t\t}\n\n\t\t\tbuild() {\n\t\t\t\tconst builder = new flatbuffers.Builder(1);\n\n\t\t\t\t// Create vectors\n\t\t\t\tconst signatureVector = SecretProofTransactionBuffer\n\t\t\t\t\t.createSignatureVector(builder, Array(...Array(64)).map(Number.prototype.valueOf, 0));\n\t\t\t\tconst signerVector = SecretProofTransactionBuffer.createSignerVector(builder, Array(...Array(32)).map(Number.prototype.valueOf, 0));\n\t\t\t\tconst deadlineVector = SecretProofTransactionBuffer.createDeadlineVector(builder, this.deadline);\n\t\t\t\tconst feeVector = SecretProofTransactionBuffer.createFeeVector(builder, this.fee);\n\t\t\t\tconst byteSecret = convert.hexToUint8(this.secret);\n\t\t\t\tconst secretVector = SecretProofTransactionBuffer.createSecretVector(builder, byteSecret);\n\t\t\t\tconst byteProof = convert.hexToUint8(this.proof);\n\t\t\t\tconst proofVector = SecretProofTransactionBuffer.createProofVector(builder, byteProof);\n\n\t\t\t\tSecretProofTransactionBuffer.startSecretProofTransactionBuffer(builder);\n\t\t\t\tSecretProofTransactionBuffer.addSize(builder, 155 + byteProof.length);\n\t\t\t\tSecretProofTransactionBuffer.addSignature(builder, signatureVector);\n\t\t\t\tSecretProofTransactionBuffer.addSigner(builder, signerVector);\n\t\t\t\tSecretProofTransactionBuffer.addVersion(builder, this.version);\n\t\t\t\tSecretProofTransactionBuffer.addType(builder, this.type);\n\t\t\t\tSecretProofTransactionBuffer.addFee(builder, feeVector);\n\t\t\t\tSecretProofTransactionBuffer.addDeadline(builder, deadlineVector);\n\t\t\t\tSecretProofTransactionBuffer.addHashAlgorithm(builder, this.hashAlgorithm);\n\t\t\t\tSecretProofTransactionBuffer.addSecret(builder, secretVector);\n\t\t\t\tSecretProofTransactionBuffer.addProofSize(builder, byteProof.length);\n\t\t\t\tSecretProofTransactionBuffer.addProof(builder, proofVector);\n\n\t\t\t\tconst codedSecretProof = SecretProofTransactionBuffer.endSecretProofTransactionBuffer(builder);\n\t\t\t\tbuilder.finish(codedSecretProof);\n\n\t\t\t\tconst bytes = builder.asUint8Array();\n\t\t\t\treturn new SecretProofTransaction(bytes, SecretProofTransactionSchema);\n\t\t\t}\n\t\t}\n\n\t\treturn Builder;\n\t}\n}\n"]}